package javaapplication1;

public class ZlozenieTransformacji implements Transformacja {

    private final Transformacja[] tab;

    public ZlozenieTransformacji(Transformacja[] tab) {
        this.tab = tab;
    }

   @Override
    public Transformacja getTranformacjaOdwrotna() 
            throws BrakTransformacjiOdwrotnejException{
        Transformacja[] tab = new Transformacja[this.tab.length];
        try{
            for(int i = 0; i < tab.length; i++){
                tab[i] = this.tab[tab.length - i - 1].getTranformacjaOdwrotna();
            }
        }
        catch(BrakTransformacjiOdwrotnejException ex){
            ex.printStackTrace();
        }
        return new ZlozenieTransformacji(tab);
    } 

    @Override
    public Punkt transformuj(Punkt p) {
        Punkt wynik = new Punkt(p.getX(), p.getY());
        for (int i = 0; i < tab.length; i++) {
            wynik = tab[i].transformuj(wynik);
        }
        return wynik;
    }
    
     public Transformacja[] getTab(){
        return tab;
    }
     
    @Override
    public String toString(){
        String result = "Złożenie transformacji{\n";
        for(int i = 0; i < tab.length; i++){
            result += tab[i] + "\n";
        }
        result += "} - - - - - - - - - - -";
        return result;
    }
}